{"java":"/*\r\n * @lc app=leetcode id=26 lang=java\r\n *\r\n * [26] Remove Duplicates from Sorted Array\r\n *\r\n * https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/\r\n *\r\n * algorithms\r\n * Easy (39.49%)\r\n * Total Accepted:    518.5K\r\n * Total Submissions: 1.3M\r\n * Testcase Example:  '[1,1,2]'\r\n *\r\n * Given a sorted array nums, remove the duplicates in-place such that each\r\n * element appear only once and return the new length.\r\n * \r\n * Do not allocate extra space for another array, you must do this by modifying\r\n * the input array in-place with O(1) extra memory.\r\n * \r\n * Example 1:\r\n * \r\n * \r\n * Given nums = [1,1,2],\r\n * \r\n * Your function should return length = 2, with the first two elements of nums\r\n * being 1 and 2 respectively.\r\n * \r\n * It doesn't matter what you leave beyond the returned length.\r\n * \r\n * Example 2:\r\n * \r\n * \r\n * Given nums = [0,0,1,1,1,2,2,3,3,4],\r\n * \r\n * Your function should return length = 5, with the first five elements of nums\r\n * being modified to 0, 1, 2, 3, and 4 respectively.\r\n * \r\n * It doesn't matter what values are set beyond the returned length.\r\n * \r\n * \r\n * Clarification:\r\n * \r\n * Confused why the returned value is an integer but your answer is an array?\r\n * \r\n * Note that the input array is passed in by reference, which means\r\n * modification to the input array will be known to the caller as well.\r\n * \r\n * Internally you can think of this:\r\n * \r\n * \r\n * // nums is passed in by reference. (i.e., without making a copy)\r\n * int len = removeDuplicates(nums);\r\n * \r\n * // any modification to nums in your function would be known by the caller.\r\n * // using the length returned by your function, it prints the first len\r\n * elements.\r\n * for (int i = 0; i < len; i++) {\r\n * print(nums[i]);\r\n * }\r\n * \r\n */\r\nclass Solution {\r\n    public int removeDuplicates(int[] nums) {\r\n        int result = 0;\r\n        for (int i = 0; i < nums.length; i++) {\r\n            if (nums[i] != nums[result]) {\r\n                nums[++result] = nums[i];\r\n            }\r\n        }\r\n        result += 1;\r\n        return result;\r\n    }\r\n}\r\n"}